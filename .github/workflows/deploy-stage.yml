name: Deploy to staging environment

# Controls when the action will run
on:
  # Triggers the workflow on repository-dispatch event
  repository_dispatch:
    types: [staging-deployment]

  # Allows to run the workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      tag:
        description: Tag or branch to deploy
        required: false
        default: main
        type: string

jobs:
  deploy-app:
    name: Deploy to staging
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.client_payload.tag }}

      - name: Yarn install and Cache dependencies
        uses: graasp/graasp-deploy/.github/actions/yarn-install-and-cache@v1

      - name: Set version
        id: set-version
        run: |
          VERSION_REPO_DISPATCH=${{ github.event.client_payload.tag }}
          VERSION_REF=${{ github.ref_name }}
          VERSION_COMMIT=${{ github.sha }}
          echo "VERSION=${VERSION_REPO_DISPATCH:-${VERSION_REF:-${VERSION_COMMIT:-"undefined"}}}" >> "$GITHUB_OUTPUT"

      - name: Yarn build
        # Set environment variables required to perform the build. These are only available to this step
        env:
          VITE_API_HOST: ${{ vars.API_HOST }}
          VITE_GRAASP_APP_KEY: ${{ secrets.APP_KEY }}
          VITE_SENTRY_ENV: ${{ vars.SENTRY_ENV }}
          VITE_SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          VITE_VERSION: ${{ steps.set-version.outputs.VERSION }}
          VITE_WS_HOST: ${{ vars.WS_HOST }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          VITE_BACKEND_HOST: ${{ vars.BACKEND_HOST }}
          VITE_BACKEND_WS_ROUTE: ${{ vars.BACKEND_WS_ROUTE }}
          # add any env variable needed by your app here
        run: yarn build
        shell: bash

      - name: Deploy
        uses: graasp/graasp-deploy/.github/actions/deploy-s3-app@v1
        with:
          # Replace input build-folder or version if needed
          build-folder: 'build'
          graasp-app-id: ${{ vars.APP_ID }}
          version: 'latest'
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_STAGE }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_STAGE }}
          aws-region: ${{ vars.APPS_AWS_REGION_STAGE }}
          aws-s3-bucket-name: ${{ vars.AWS_S3_BUCKET_NAME_APPS_STAGE }}
          cloudfront-distribution-id: ${{ secrets.CLOUDFRONT_DISTRIBUTION_APPS_STAGE }}
